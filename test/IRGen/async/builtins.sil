// RUN: %target-swift-frontend -enable-experimental-concurrency -enable-objc-interop  -primary-file %s -emit-ir | %FileCheck %s -DINT=i%target-ptrsize --check-prefixes=CHECK,CHECK-objc
// RUN: %target-swift-frontend -enable-experimental-concurrency -disable-objc-interop -primary-file %s -emit-ir | %FileCheck %s -DINT=i%target-ptrsize --check-prefixes=CHECK,CHECK-native

// REQUIRES: concurrency

sil_stage canonical

import Builtin

// CHECK-LABEL: define hidden swiftcc void @get_task(%swift.task* %0, %swift.executor* %1, %swift.context* %2)
sil hidden [ossa] @get_task : $@async @convention(thin) () -> @owned Builtin.NativeObject {
bb0:
  // CHECK: [[TASK:%.*]] = bitcast %swift.task* %0 to %swift.refcounted*
  %0 = builtin "getCurrentAsyncTask"() : $Builtin.NativeObject
  // CHECK-NEXT: [[TASK_COPY:%.*]] = call %swift.refcounted* @swift_retain(%swift.refcounted* returned [[TASK]])
  %1 = copy_value %0 : $Builtin.NativeObject
  return %1 : $Builtin.NativeObject
}
