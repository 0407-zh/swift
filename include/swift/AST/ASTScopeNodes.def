//===--- ASTScopeNodes.def - Node kinds for the ASTScope tree ---*- C++ -*-===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2017 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//
//
// This file defines all of the kinds of ASTScope nodes. 
//
//===----------------------------------------------------------------------===//

#ifndef SCOPE_NODE
#  error "define SCOPE_NODE(Name) when enumerating ASTScope nodes
#  define SCOPE_NODE(Name)
#endif

SCOPE_NODE(ASTSourceFile)
SCOPE_NODE(NominalType)
SCOPE_NODE(Extension)
SCOPE_NODE(TypeAlias)
SCOPE_NODE(OpaqueType)
SCOPE_NODE(GenericParam)
SCOPE_NODE(AbstractFunctionDecl)
SCOPE_NODE(ParameterList)
SCOPE_NODE(FunctionBody)
SCOPE_NODE(DefaultArgumentInitializer)
SCOPE_NODE(CustomAttribute)
SCOPE_NODE(PatternEntryDecl)
SCOPE_NODE(PatternEntryInitializer)
SCOPE_NODE(ConditionalClausePatternUse)
SCOPE_NODE(ConditionalClauseInitializer)
SCOPE_NODE(CaptureList)
SCOPE_NODE(ClosureParameters)
SCOPE_NODE(TopLevelCode)
SCOPE_NODE(SpecializeAttribute)
SCOPE_NODE(DifferentiableAttribute)
SCOPE_NODE(SubscriptDecl)
SCOPE_NODE(EnumElement)
SCOPE_NODE(MacroDecl)
SCOPE_NODE(MacroDefinition)
SCOPE_NODE(MacroExpansionDecl)
SCOPE_NODE(IfStmt)
SCOPE_NODE(WhileStmt)
SCOPE_NODE(GuardStmt)
SCOPE_NODE(GuardStmtBody)
SCOPE_NODE(RepeatWhile)
SCOPE_NODE(DoStmt)
SCOPE_NODE(DoCatchStmt)
SCOPE_NODE(SwitchStmt)
SCOPE_NODE(ForEachStmt)
SCOPE_NODE(ForEachPattern)
SCOPE_NODE(CaseStmt)
SCOPE_NODE(CaseLabelItem)
SCOPE_NODE(CaseStmtBody)
SCOPE_NODE(BraceStmt)
SCOPE_NODE(IterableType)

#undef SCOPE_NODE
